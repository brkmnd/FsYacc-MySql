// Signature file for parser generated by fsyacc
module Parser
type token = 
  | VAL_ERROR
  | VAL_EMPTY
  | VAL_BOOL
  | VAL_DUAL
  | VAL_UNKNOWN
  | VAL_FALSE
  | VAL_TRUE
  | VAL_NULL
  | VAL_STRING of (string)
  | VAL_BIN of (string)
  | VAL_HEX of (string)
  | VAL_NUM of (string)
  | VAL_ID of (string)
  | NOKEY_NESTED
  | NOKEY_PATH
  | NOKEY_ORDINALITY
  | KEY_SQL_NO_CACHE
  | KEY_ROLLUP
  | KEY_SQL_CALC_FOUND_ROWS
  | KEY_SQL_BUFFER_RESULT
  | KEY_SQL_BIG_RESULT
  | KEY_SQL_SMALL_RESULT
  | KEY_HIGH_PRIORITY
  | KEY_PRIMARY
  | KEY_USE
  | KEY_BY
  | KEY_ORDER
  | KEY_DEFAULT
  | KEY_EXISTS
  | KEY_DISTINCT
  | KEY_PARTITION
  | KEY_WHERE
  | KEY_FOR
  | KEY_COLUMNS
  | KEY_UNIQUE
  | KEY_INDEXES
  | KEY_INDEX
  | KEY_KEYS
  | KEY_KEY
  | KEY_IGNORE
  | KEY_FORCE
  | KEY_FROM
  | KEY_OUTFILE
  | KEY_ANY
  | KEY_ALL
  | KEY_IS
  | KEY_AS
  | KEY_SELECT
  | OP_AS
  | OP_GROUP
  | OP_OUTER
  | OP_JSON_TABLE
  | OP_MOD_TXT
  | OP_DIV_TXT
  | OP_NOT_TXT
  | OP_OR_TXT
  | OP_AND_TXT
  | OP_IN
  | OP_BETWEEN
  | OP_SOUNDS
  | OP_BOR
  | OP_BAND
  | OP_UP
  | OP_SHIFT_LEFT
  | OP_SHIFT_RIGHT
  | OP_EQ
  | OP_EQ2
  | OP_NEQ
  | OP_NEQ2
  | OP_GT
  | OP_LT
  | OP_GEQ
  | OP_LEQ
  | OP_NOT
  | OP_OR
  | OP_XOR
  | OP_AND
  | OP_TILDE
  | OP_LIKE
  | OP_BANG
  | OP_PLUS
  | OP_MINUS
  | OP_DIV
  | OP_TIMES
  | OP_PERC
  | OP_DOT
  | OP_JOIN
  | OP_INNER
  | OP_CROSS
  | OP_STRAIGHT_JOIN
  | OP_NATURAL
  | OP_LEFT
  | OP_RIGHT
  | OP_ON
  | OP_USING
  | OP_INTO
  | PAR_LPAR
  | PAR_RPAR
  | PAR_LBRACE
  | PAR_RBRACE
  | DELIM_SCOLON
  | DELIM_COMMA
  | END_OF_INPUT
type tokenId = 
    | TOKEN_VAL_ERROR
    | TOKEN_VAL_EMPTY
    | TOKEN_VAL_BOOL
    | TOKEN_VAL_DUAL
    | TOKEN_VAL_UNKNOWN
    | TOKEN_VAL_FALSE
    | TOKEN_VAL_TRUE
    | TOKEN_VAL_NULL
    | TOKEN_VAL_STRING
    | TOKEN_VAL_BIN
    | TOKEN_VAL_HEX
    | TOKEN_VAL_NUM
    | TOKEN_VAL_ID
    | TOKEN_NOKEY_NESTED
    | TOKEN_NOKEY_PATH
    | TOKEN_NOKEY_ORDINALITY
    | TOKEN_KEY_SQL_NO_CACHE
    | TOKEN_KEY_ROLLUP
    | TOKEN_KEY_SQL_CALC_FOUND_ROWS
    | TOKEN_KEY_SQL_BUFFER_RESULT
    | TOKEN_KEY_SQL_BIG_RESULT
    | TOKEN_KEY_SQL_SMALL_RESULT
    | TOKEN_KEY_HIGH_PRIORITY
    | TOKEN_KEY_PRIMARY
    | TOKEN_KEY_USE
    | TOKEN_KEY_BY
    | TOKEN_KEY_ORDER
    | TOKEN_KEY_DEFAULT
    | TOKEN_KEY_EXISTS
    | TOKEN_KEY_DISTINCT
    | TOKEN_KEY_PARTITION
    | TOKEN_KEY_WHERE
    | TOKEN_KEY_FOR
    | TOKEN_KEY_COLUMNS
    | TOKEN_KEY_UNIQUE
    | TOKEN_KEY_INDEXES
    | TOKEN_KEY_INDEX
    | TOKEN_KEY_KEYS
    | TOKEN_KEY_KEY
    | TOKEN_KEY_IGNORE
    | TOKEN_KEY_FORCE
    | TOKEN_KEY_FROM
    | TOKEN_KEY_OUTFILE
    | TOKEN_KEY_ANY
    | TOKEN_KEY_ALL
    | TOKEN_KEY_IS
    | TOKEN_KEY_AS
    | TOKEN_KEY_SELECT
    | TOKEN_OP_AS
    | TOKEN_OP_GROUP
    | TOKEN_OP_OUTER
    | TOKEN_OP_JSON_TABLE
    | TOKEN_OP_MOD_TXT
    | TOKEN_OP_DIV_TXT
    | TOKEN_OP_NOT_TXT
    | TOKEN_OP_OR_TXT
    | TOKEN_OP_AND_TXT
    | TOKEN_OP_IN
    | TOKEN_OP_BETWEEN
    | TOKEN_OP_SOUNDS
    | TOKEN_OP_BOR
    | TOKEN_OP_BAND
    | TOKEN_OP_UP
    | TOKEN_OP_SHIFT_LEFT
    | TOKEN_OP_SHIFT_RIGHT
    | TOKEN_OP_EQ
    | TOKEN_OP_EQ2
    | TOKEN_OP_NEQ
    | TOKEN_OP_NEQ2
    | TOKEN_OP_GT
    | TOKEN_OP_LT
    | TOKEN_OP_GEQ
    | TOKEN_OP_LEQ
    | TOKEN_OP_NOT
    | TOKEN_OP_OR
    | TOKEN_OP_XOR
    | TOKEN_OP_AND
    | TOKEN_OP_TILDE
    | TOKEN_OP_LIKE
    | TOKEN_OP_BANG
    | TOKEN_OP_PLUS
    | TOKEN_OP_MINUS
    | TOKEN_OP_DIV
    | TOKEN_OP_TIMES
    | TOKEN_OP_PERC
    | TOKEN_OP_DOT
    | TOKEN_OP_JOIN
    | TOKEN_OP_INNER
    | TOKEN_OP_CROSS
    | TOKEN_OP_STRAIGHT_JOIN
    | TOKEN_OP_NATURAL
    | TOKEN_OP_LEFT
    | TOKEN_OP_RIGHT
    | TOKEN_OP_ON
    | TOKEN_OP_USING
    | TOKEN_OP_INTO
    | TOKEN_PAR_LPAR
    | TOKEN_PAR_RPAR
    | TOKEN_PAR_LBRACE
    | TOKEN_PAR_RBRACE
    | TOKEN_DELIM_SCOLON
    | TOKEN_DELIM_COMMA
    | TOKEN_END_OF_INPUT
    | TOKEN_end_of_input
    | TOKEN_error
type nonTerminalId = 
    | NONTERM__startstart_entry
    | NONTERM_start_entry
    | NONTERM_sql_statement
    | NONTERM_opt_end_of_input
    | NONTERM_simple_statement_or_begin
    | NONTERM_simple_statement
    | NONTERM_select_stmt
    | NONTERM_union_option
    | NONTERM_row_subquery
    | NONTERM_table_subquery
    | NONTERM_subquery
    | NONTERM_query_expression
    | NONTERM_query_expression_body
    | NONTERM_query_expression_parens
    | NONTERM_query_primary
    | NONTERM_query_specification
    | NONTERM_select_options
    | NONTERM_select_option_list
    | NONTERM_select_option
    | NONTERM_query_spec_option
    | NONTERM_select_item_list
    | NONTERM_select_item
    | NONTERM_select_alias
    | NONTERM_into_clause
    | NONTERM_into_destination
    | NONTERM_opt_from_clause
    | NONTERM_from_clause
    | NONTERM_from_tables
    | NONTERM_table_reference_list
    | NONTERM_table_reference
    | NONTERM_joined_table
    | NONTERM_natural_join_type
    | NONTERM_inner_join_type
    | NONTERM_outer_join_type
    | NONTERM_opt_inner
    | NONTERM_opt_outer
    | NONTERM_opt_use_partition
    | NONTERM_use_partition
    | NONTERM_table_factor
    | NONTERM_table_reference_list_parens
    | NONTERM_single_table_parens
    | NONTERM_single_table
    | NONTERM_joined_table_parens
    | NONTERM_derived_table
    | NONTERM_opt_derived_column_list
    | NONTERM_simple_ident_list
    | NONTERM_table_function
    | NONTERM_columns_clause
    | NONTERM_columns_list
    | NONTERM_jt_column
    | NONTERM_jt_column_type
    | NONTERM_opt_on_empty_or_error
    | NONTERM_opt_on_empty
    | NONTERM_opt_on_error
    | NONTERM_jt_on_response
    | NONTERM_index_hint_clause
    | NONTERM_index_hint_type
    | NONTERM_index_hint_definition
    | NONTERM_index_hints_list
    | NONTERM_opt_index_hints_list
    | NONTERM_opt_where_clause
    | NONTERM_opt_where_clause_expr
    | NONTERM_opt_key_definition
    | NONTERM_opt_group_clause
    | NONTERM_group_list
    | NONTERM_olap_opt
    | NONTERM_opt_key_usage_list
    | NONTERM_key_usage_element
    | NONTERM_key_usage_list
    | NONTERM_using_list
    | NONTERM_ident_string_list
    | NONTERM_opt_as_or_eq
    | NONTERM_opt_table_alias
    | NONTERM_opt_all
    | NONTERM_key_or_index
    | NONTERM_opt_key_or_index
    | NONTERM_keys_or_index
    | NONTERM_opt_unique
    | NONTERM_set_type
    | NONTERM_expr_list
    | NONTERM_expr
    | NONTERM_bool_pri
    | NONTERM_predicate
    | NONTERM_bit_expr
    | NONTERM_op_or
    | NONTERM_op_and
    | NONTERM_op_not
    | NONTERM_comp_op
    | NONTERM_all_or_any
    | NONTERM_simple_expr
    | NONTERM_literal
    | NONTERM_text_literal
    | NONTERM_text_string_sys
    | NONTERM_num_literal
    | NONTERM_ident
    | NONTERM_simple_ident
    | NONTERM_simple_ident_nospvar
    | NONTERM_simple_ident_q
    | NONTERM_table_ident
    | NONTERM_table_ident_opt_wild
    | NONTERM_opt_wild
    | NONTERM_table_wild
/// This function maps tokens to integer indexes
val tagOfToken: token -> int

/// This function maps integer indexes to symbolic token ids
val tokenTagToTokenId: int -> tokenId

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
val prodIdxToNonTerminal: int -> nonTerminalId

/// This function gets the name of a token as a string
val token_to_string: token -> string
val start_entry : (Microsoft.FSharp.Text.Lexing.LexBuffer<'cty> -> token) -> Microsoft.FSharp.Text.Lexing.LexBuffer<'cty> -> (AbSyn.Qs list) 
